// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package endorse.proxies;

public class Wallet implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject walletMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Endorse.Wallet";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		WalletID("WalletID"),
		Amount("Amount"),
		Wallet_Coin("Endorse.Wallet_Coin"),
		Wallet_User("Endorse.Wallet_User");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Wallet(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Wallet(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject walletMendixObject)
	{
		if (walletMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, walletMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.walletMendixObject = walletMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static endorse.proxies.Wallet initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new endorse.proxies.Wallet(context, mendixObject);
	}

	public static endorse.proxies.Wallet load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return endorse.proxies.Wallet.initialize(context, mendixObject);
	}

	public static java.util.List<endorse.proxies.Wallet> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> endorse.proxies.Wallet.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of WalletID
	 */
	public final java.lang.Long getWalletID()
	{
		return getWalletID(getContext());
	}

	/**
	 * @param context
	 * @return value of WalletID
	 */
	public final java.lang.Long getWalletID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.WalletID.toString());
	}

	/**
	 * Set value of WalletID
	 * @param walletid
	 */
	public final void setWalletID(java.lang.Long walletid)
	{
		setWalletID(getContext(), walletid);
	}

	/**
	 * Set value of WalletID
	 * @param context
	 * @param walletid
	 */
	public final void setWalletID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long walletid)
	{
		getMendixObject().setValue(context, MemberNames.WalletID.toString(), walletid);
	}

	/**
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.math.BigDecimal amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Wallet_Coin
	 */
	public final endorse.proxies.Coin getWallet_Coin() throws com.mendix.core.CoreException
	{
		return getWallet_Coin(getContext());
	}

	/**
	 * @param context
	 * @return value of Wallet_Coin
	 * @throws com.mendix.core.CoreException
	 */
	public final endorse.proxies.Coin getWallet_Coin(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		endorse.proxies.Coin result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Wallet_Coin.toString());
		if (identifier != null) {
			result = endorse.proxies.Coin.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Wallet_Coin
	 * @param wallet_coin
	 */
	public final void setWallet_Coin(endorse.proxies.Coin wallet_coin)
	{
		setWallet_Coin(getContext(), wallet_coin);
	}

	/**
	 * Set value of Wallet_Coin
	 * @param context
	 * @param wallet_coin
	 */
	public final void setWallet_Coin(com.mendix.systemwideinterfaces.core.IContext context, endorse.proxies.Coin wallet_coin)
	{
		if (wallet_coin == null) {
			getMendixObject().setValue(context, MemberNames.Wallet_Coin.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Wallet_Coin.toString(), wallet_coin.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Wallet_User
	 */
	public final endorse.proxies.User getWallet_User() throws com.mendix.core.CoreException
	{
		return getWallet_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Wallet_User
	 * @throws com.mendix.core.CoreException
	 */
	public final endorse.proxies.User getWallet_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		endorse.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Wallet_User.toString());
		if (identifier != null) {
			result = endorse.proxies.User.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Wallet_User
	 * @param wallet_user
	 */
	public final void setWallet_User(endorse.proxies.User wallet_user)
	{
		setWallet_User(getContext(), wallet_user);
	}

	/**
	 * Set value of Wallet_User
	 * @param context
	 * @param wallet_user
	 */
	public final void setWallet_User(com.mendix.systemwideinterfaces.core.IContext context, endorse.proxies.User wallet_user)
	{
		if (wallet_user == null) {
			getMendixObject().setValue(context, MemberNames.Wallet_User.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Wallet_User.toString(), wallet_user.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return walletMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final endorse.proxies.Wallet that = (endorse.proxies.Wallet) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
