// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package endorse.proxies;

public class Customer extends endorse.proxies.User
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Endorse.Customer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CustomerID("CustomerID"),
		PhoneNumber("PhoneNumber"),
		Balance("Balance"),
		TradeWithUSD("TradeWithUSD"),
		TotalCoinValue("TotalCoinValue"),
		Country("Country"),
		City("City"),
		Adress("Adress"),
		TransactionsViewMode("TransactionsViewMode"),
		FullName("FullName"),
		Email("Email"),
		IsLocalUser("IsLocalUser"),
		Name("Name"),
		Password("Password"),
		LastLogin("LastLogin"),
		Blocked("Blocked"),
		BlockedSince("BlockedSince"),
		Active("Active"),
		FailedLogins("FailedLogins"),
		WebServiceUser("WebServiceUser"),
		IsAnonymous("IsAnonymous"),
		User_Employee("Endorse.User_Employee"),
		User_Customer("Endorse.User_Customer"),
		User_UserPhoto("Endorse.User_UserPhoto"),
		User_Branch("Endorse.User_Branch"),
		UserRoles("System.UserRoles"),
		User_Language("System.User_Language"),
		User_TimeZone("System.User_TimeZone");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Customer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Customer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject customerMendixObject)
	{
		super(context, customerMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, customerMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static endorse.proxies.Customer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new endorse.proxies.Customer(context, mendixObject);
	}

	public static endorse.proxies.Customer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return endorse.proxies.Customer.initialize(context, mendixObject);
	}

	public static java.util.List<endorse.proxies.Customer> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> endorse.proxies.Customer.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of CustomerID
	 */
	public final java.lang.Long getCustomerID()
	{
		return getCustomerID(getContext());
	}

	/**
	 * @param context
	 * @return value of CustomerID
	 */
	public final java.lang.Long getCustomerID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.CustomerID.toString());
	}

	/**
	 * Set value of CustomerID
	 * @param customerid
	 */
	public final void setCustomerID(java.lang.Long customerid)
	{
		setCustomerID(getContext(), customerid);
	}

	/**
	 * Set value of CustomerID
	 * @param context
	 * @param customerid
	 */
	public final void setCustomerID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long customerid)
	{
		getMendixObject().setValue(context, MemberNames.CustomerID.toString(), customerid);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final endorse.proxies.Customer that = (endorse.proxies.Customer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
