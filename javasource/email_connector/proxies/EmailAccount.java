// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package email_connector.proxies;

public class EmailAccount implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject emailAccountMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Email_Connector.EmailAccount";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Username("Username"),
		MailAddress("MailAddress"),
		Password("Password"),
		Timeout("Timeout"),
		sanitizeEmailBodyForXSSScript("sanitizeEmailBodyForXSSScript"),
		isP12Configured("isP12Configured"),
		isLDAPConfigured("isLDAPConfigured"),
		isIncomingEmailConfigured("isIncomingEmailConfigured"),
		isOutgoingEmailConfigured("isOutgoingEmailConfigured"),
		FromDisplayName("FromDisplayName"),
		UseSSLCheckServerIdentity("UseSSLCheckServerIdentity"),
		IsSharedMailbox("IsSharedMailbox"),
		isOAuthUsed("isOAuthUsed"),
		isEmailConfigAutoDetect("isEmailConfigAutoDetect"),
		ComposeEmail("ComposeEmail"),
		OutgoingEmailConfiguration_EmailAccount("Email_Connector.OutgoingEmailConfiguration_EmailAccount"),
		IncomingEmailConfiguration_EmailAccount("Email_Connector.IncomingEmailConfiguration_EmailAccount"),
		Pk12Certificate_EmailAccount("Email_Connector.Pk12Certificate_EmailAccount"),
		EmailAccount_LDAPConfiguration("Email_Connector.EmailAccount_LDAPConfiguration"),
		EmailAccount_OAuthProvider("Email_Connector.EmailAccount_OAuthProvider"),
		EmailAccount_OAuthToken("Email_Connector.EmailAccount_OAuthToken");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public EmailAccount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject emailAccountMendixObject)
	{
		if (emailAccountMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, emailAccountMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.emailAccountMendixObject = emailAccountMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static email_connector.proxies.EmailAccount initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new email_connector.proxies.EmailAccount(context, mendixObject);
	}

	public static email_connector.proxies.EmailAccount load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return email_connector.proxies.EmailAccount.initialize(context, mendixObject);
	}

	public static java.util.List<email_connector.proxies.EmailAccount> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> email_connector.proxies.EmailAccount.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Username
	 */
	public final java.lang.String getUsername()
	{
		return getUsername(getContext());
	}

	/**
	 * @param context
	 * @return value of Username
	 */
	public final java.lang.String getUsername(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Username.toString());
	}

	/**
	 * Set value of Username
	 * @param username
	 */
	public final void setUsername(java.lang.String username)
	{
		setUsername(getContext(), username);
	}

	/**
	 * Set value of Username
	 * @param context
	 * @param username
	 */
	public final void setUsername(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String username)
	{
		getMendixObject().setValue(context, MemberNames.Username.toString(), username);
	}

	/**
	 * @return value of MailAddress
	 */
	public final java.lang.String getMailAddress()
	{
		return getMailAddress(getContext());
	}

	/**
	 * @param context
	 * @return value of MailAddress
	 */
	public final java.lang.String getMailAddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MailAddress.toString());
	}

	/**
	 * Set value of MailAddress
	 * @param mailaddress
	 */
	public final void setMailAddress(java.lang.String mailaddress)
	{
		setMailAddress(getContext(), mailaddress);
	}

	/**
	 * Set value of MailAddress
	 * @param context
	 * @param mailaddress
	 */
	public final void setMailAddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String mailaddress)
	{
		getMendixObject().setValue(context, MemberNames.MailAddress.toString(), mailaddress);
	}

	/**
	 * @return value of Password
	 */
	public final java.lang.String getPassword()
	{
		return getPassword(getContext());
	}

	/**
	 * @param context
	 * @return value of Password
	 */
	public final java.lang.String getPassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Password.toString());
	}

	/**
	 * Set value of Password
	 * @param password
	 */
	public final void setPassword(java.lang.String password)
	{
		setPassword(getContext(), password);
	}

	/**
	 * Set value of Password
	 * @param context
	 * @param password
	 */
	public final void setPassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String password)
	{
		getMendixObject().setValue(context, MemberNames.Password.toString(), password);
	}

	/**
	 * @return value of Timeout
	 */
	public final java.lang.Integer getTimeout()
	{
		return getTimeout(getContext());
	}

	/**
	 * @param context
	 * @return value of Timeout
	 */
	public final java.lang.Integer getTimeout(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Timeout.toString());
	}

	/**
	 * Set value of Timeout
	 * @param timeout
	 */
	public final void setTimeout(java.lang.Integer timeout)
	{
		setTimeout(getContext(), timeout);
	}

	/**
	 * Set value of Timeout
	 * @param context
	 * @param timeout
	 */
	public final void setTimeout(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer timeout)
	{
		getMendixObject().setValue(context, MemberNames.Timeout.toString(), timeout);
	}

	/**
	 * @return value of sanitizeEmailBodyForXSSScript
	 */
	public final java.lang.Boolean getsanitizeEmailBodyForXSSScript()
	{
		return getsanitizeEmailBodyForXSSScript(getContext());
	}

	/**
	 * @param context
	 * @return value of sanitizeEmailBodyForXSSScript
	 */
	public final java.lang.Boolean getsanitizeEmailBodyForXSSScript(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.sanitizeEmailBodyForXSSScript.toString());
	}

	/**
	 * Set value of sanitizeEmailBodyForXSSScript
	 * @param sanitizeemailbodyforxssscript
	 */
	public final void setsanitizeEmailBodyForXSSScript(java.lang.Boolean sanitizeemailbodyforxssscript)
	{
		setsanitizeEmailBodyForXSSScript(getContext(), sanitizeemailbodyforxssscript);
	}

	/**
	 * Set value of sanitizeEmailBodyForXSSScript
	 * @param context
	 * @param sanitizeemailbodyforxssscript
	 */
	public final void setsanitizeEmailBodyForXSSScript(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sanitizeemailbodyforxssscript)
	{
		getMendixObject().setValue(context, MemberNames.sanitizeEmailBodyForXSSScript.toString(), sanitizeemailbodyforxssscript);
	}

	/**
	 * @return value of isP12Configured
	 */
	public final java.lang.Boolean getisP12Configured()
	{
		return getisP12Configured(getContext());
	}

	/**
	 * @param context
	 * @return value of isP12Configured
	 */
	public final java.lang.Boolean getisP12Configured(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isP12Configured.toString());
	}

	/**
	 * Set value of isP12Configured
	 * @param isp12configured
	 */
	public final void setisP12Configured(java.lang.Boolean isp12configured)
	{
		setisP12Configured(getContext(), isp12configured);
	}

	/**
	 * Set value of isP12Configured
	 * @param context
	 * @param isp12configured
	 */
	public final void setisP12Configured(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isp12configured)
	{
		getMendixObject().setValue(context, MemberNames.isP12Configured.toString(), isp12configured);
	}

	/**
	 * @return value of isLDAPConfigured
	 */
	public final java.lang.Boolean getisLDAPConfigured()
	{
		return getisLDAPConfigured(getContext());
	}

	/**
	 * @param context
	 * @return value of isLDAPConfigured
	 */
	public final java.lang.Boolean getisLDAPConfigured(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isLDAPConfigured.toString());
	}

	/**
	 * Set value of isLDAPConfigured
	 * @param isldapconfigured
	 */
	public final void setisLDAPConfigured(java.lang.Boolean isldapconfigured)
	{
		setisLDAPConfigured(getContext(), isldapconfigured);
	}

	/**
	 * Set value of isLDAPConfigured
	 * @param context
	 * @param isldapconfigured
	 */
	public final void setisLDAPConfigured(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isldapconfigured)
	{
		getMendixObject().setValue(context, MemberNames.isLDAPConfigured.toString(), isldapconfigured);
	}

	/**
	 * @return value of isIncomingEmailConfigured
	 */
	public final java.lang.Boolean getisIncomingEmailConfigured()
	{
		return getisIncomingEmailConfigured(getContext());
	}

	/**
	 * @param context
	 * @return value of isIncomingEmailConfigured
	 */
	public final java.lang.Boolean getisIncomingEmailConfigured(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isIncomingEmailConfigured.toString());
	}

	/**
	 * Set value of isIncomingEmailConfigured
	 * @param isincomingemailconfigured
	 */
	public final void setisIncomingEmailConfigured(java.lang.Boolean isincomingemailconfigured)
	{
		setisIncomingEmailConfigured(getContext(), isincomingemailconfigured);
	}

	/**
	 * Set value of isIncomingEmailConfigured
	 * @param context
	 * @param isincomingemailconfigured
	 */
	public final void setisIncomingEmailConfigured(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isincomingemailconfigured)
	{
		getMendixObject().setValue(context, MemberNames.isIncomingEmailConfigured.toString(), isincomingemailconfigured);
	}

	/**
	 * @return value of isOutgoingEmailConfigured
	 */
	public final java.lang.Boolean getisOutgoingEmailConfigured()
	{
		return getisOutgoingEmailConfigured(getContext());
	}

	/**
	 * @param context
	 * @return value of isOutgoingEmailConfigured
	 */
	public final java.lang.Boolean getisOutgoingEmailConfigured(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isOutgoingEmailConfigured.toString());
	}

	/**
	 * Set value of isOutgoingEmailConfigured
	 * @param isoutgoingemailconfigured
	 */
	public final void setisOutgoingEmailConfigured(java.lang.Boolean isoutgoingemailconfigured)
	{
		setisOutgoingEmailConfigured(getContext(), isoutgoingemailconfigured);
	}

	/**
	 * Set value of isOutgoingEmailConfigured
	 * @param context
	 * @param isoutgoingemailconfigured
	 */
	public final void setisOutgoingEmailConfigured(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isoutgoingemailconfigured)
	{
		getMendixObject().setValue(context, MemberNames.isOutgoingEmailConfigured.toString(), isoutgoingemailconfigured);
	}

	/**
	 * @return value of FromDisplayName
	 */
	public final java.lang.String getFromDisplayName()
	{
		return getFromDisplayName(getContext());
	}

	/**
	 * @param context
	 * @return value of FromDisplayName
	 */
	public final java.lang.String getFromDisplayName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FromDisplayName.toString());
	}

	/**
	 * Set value of FromDisplayName
	 * @param fromdisplayname
	 */
	public final void setFromDisplayName(java.lang.String fromdisplayname)
	{
		setFromDisplayName(getContext(), fromdisplayname);
	}

	/**
	 * Set value of FromDisplayName
	 * @param context
	 * @param fromdisplayname
	 */
	public final void setFromDisplayName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fromdisplayname)
	{
		getMendixObject().setValue(context, MemberNames.FromDisplayName.toString(), fromdisplayname);
	}

	/**
	 * @return value of UseSSLCheckServerIdentity
	 */
	public final java.lang.Boolean getUseSSLCheckServerIdentity()
	{
		return getUseSSLCheckServerIdentity(getContext());
	}

	/**
	 * @param context
	 * @return value of UseSSLCheckServerIdentity
	 */
	public final java.lang.Boolean getUseSSLCheckServerIdentity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseSSLCheckServerIdentity.toString());
	}

	/**
	 * Set value of UseSSLCheckServerIdentity
	 * @param usesslcheckserveridentity
	 */
	public final void setUseSSLCheckServerIdentity(java.lang.Boolean usesslcheckserveridentity)
	{
		setUseSSLCheckServerIdentity(getContext(), usesslcheckserveridentity);
	}

	/**
	 * Set value of UseSSLCheckServerIdentity
	 * @param context
	 * @param usesslcheckserveridentity
	 */
	public final void setUseSSLCheckServerIdentity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usesslcheckserveridentity)
	{
		getMendixObject().setValue(context, MemberNames.UseSSLCheckServerIdentity.toString(), usesslcheckserveridentity);
	}

	/**
	 * @return value of IsSharedMailbox
	 */
	public final java.lang.Boolean getIsSharedMailbox()
	{
		return getIsSharedMailbox(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSharedMailbox
	 */
	public final java.lang.Boolean getIsSharedMailbox(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSharedMailbox.toString());
	}

	/**
	 * Set value of IsSharedMailbox
	 * @param issharedmailbox
	 */
	public final void setIsSharedMailbox(java.lang.Boolean issharedmailbox)
	{
		setIsSharedMailbox(getContext(), issharedmailbox);
	}

	/**
	 * Set value of IsSharedMailbox
	 * @param context
	 * @param issharedmailbox
	 */
	public final void setIsSharedMailbox(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issharedmailbox)
	{
		getMendixObject().setValue(context, MemberNames.IsSharedMailbox.toString(), issharedmailbox);
	}

	/**
	 * @return value of isOAuthUsed
	 */
	public final java.lang.Boolean getisOAuthUsed()
	{
		return getisOAuthUsed(getContext());
	}

	/**
	 * @param context
	 * @return value of isOAuthUsed
	 */
	public final java.lang.Boolean getisOAuthUsed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isOAuthUsed.toString());
	}

	/**
	 * Set value of isOAuthUsed
	 * @param isoauthused
	 */
	public final void setisOAuthUsed(java.lang.Boolean isoauthused)
	{
		setisOAuthUsed(getContext(), isoauthused);
	}

	/**
	 * Set value of isOAuthUsed
	 * @param context
	 * @param isoauthused
	 */
	public final void setisOAuthUsed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isoauthused)
	{
		getMendixObject().setValue(context, MemberNames.isOAuthUsed.toString(), isoauthused);
	}

	/**
	 * @return value of isEmailConfigAutoDetect
	 */
	public final java.lang.Boolean getisEmailConfigAutoDetect()
	{
		return getisEmailConfigAutoDetect(getContext());
	}

	/**
	 * @param context
	 * @return value of isEmailConfigAutoDetect
	 */
	public final java.lang.Boolean getisEmailConfigAutoDetect(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isEmailConfigAutoDetect.toString());
	}

	/**
	 * Set value of isEmailConfigAutoDetect
	 * @param isemailconfigautodetect
	 */
	public final void setisEmailConfigAutoDetect(java.lang.Boolean isemailconfigautodetect)
	{
		setisEmailConfigAutoDetect(getContext(), isemailconfigautodetect);
	}

	/**
	 * Set value of isEmailConfigAutoDetect
	 * @param context
	 * @param isemailconfigautodetect
	 */
	public final void setisEmailConfigAutoDetect(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isemailconfigautodetect)
	{
		getMendixObject().setValue(context, MemberNames.isEmailConfigAutoDetect.toString(), isemailconfigautodetect);
	}

	/**
	 * @return value of ComposeEmail
	 */
	public final java.lang.Boolean getComposeEmail()
	{
		return getComposeEmail(getContext());
	}

	/**
	 * @param context
	 * @return value of ComposeEmail
	 */
	public final java.lang.Boolean getComposeEmail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ComposeEmail.toString());
	}

	/**
	 * Set value of ComposeEmail
	 * @param composeemail
	 */
	public final void setComposeEmail(java.lang.Boolean composeemail)
	{
		setComposeEmail(getContext(), composeemail);
	}

	/**
	 * Set value of ComposeEmail
	 * @param context
	 * @param composeemail
	 */
	public final void setComposeEmail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean composeemail)
	{
		getMendixObject().setValue(context, MemberNames.ComposeEmail.toString(), composeemail);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of OutgoingEmailConfiguration_EmailAccount
	 */
	public final email_connector.proxies.OutgoingEmailConfiguration getOutgoingEmailConfiguration_EmailAccount() throws com.mendix.core.CoreException
	{
		return getOutgoingEmailConfiguration_EmailAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingEmailConfiguration_EmailAccount
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.OutgoingEmailConfiguration getOutgoingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.OutgoingEmailConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString());
		if (identifier != null) {
			result = email_connector.proxies.OutgoingEmailConfiguration.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of OutgoingEmailConfiguration_EmailAccount
	 * @param outgoingemailconfiguration_emailaccount
	 */
	public final void setOutgoingEmailConfiguration_EmailAccount(email_connector.proxies.OutgoingEmailConfiguration outgoingemailconfiguration_emailaccount)
	{
		setOutgoingEmailConfiguration_EmailAccount(getContext(), outgoingemailconfiguration_emailaccount);
	}

	/**
	 * Set value of OutgoingEmailConfiguration_EmailAccount
	 * @param context
	 * @param outgoingemailconfiguration_emailaccount
	 */
	public final void setOutgoingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.OutgoingEmailConfiguration outgoingemailconfiguration_emailaccount)
	{
		if (outgoingemailconfiguration_emailaccount == null) {
			getMendixObject().setValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.OutgoingEmailConfiguration_EmailAccount.toString(), outgoingemailconfiguration_emailaccount.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of IncomingEmailConfiguration_EmailAccount
	 */
	public final email_connector.proxies.IncomingEmailConfiguration getIncomingEmailConfiguration_EmailAccount() throws com.mendix.core.CoreException
	{
		return getIncomingEmailConfiguration_EmailAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingEmailConfiguration_EmailAccount
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.IncomingEmailConfiguration getIncomingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.IncomingEmailConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingEmailConfiguration_EmailAccount.toString());
		if (identifier != null) {
			result = email_connector.proxies.IncomingEmailConfiguration.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of IncomingEmailConfiguration_EmailAccount
	 * @param incomingemailconfiguration_emailaccount
	 */
	public final void setIncomingEmailConfiguration_EmailAccount(email_connector.proxies.IncomingEmailConfiguration incomingemailconfiguration_emailaccount)
	{
		setIncomingEmailConfiguration_EmailAccount(getContext(), incomingemailconfiguration_emailaccount);
	}

	/**
	 * Set value of IncomingEmailConfiguration_EmailAccount
	 * @param context
	 * @param incomingemailconfiguration_emailaccount
	 */
	public final void setIncomingEmailConfiguration_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.IncomingEmailConfiguration incomingemailconfiguration_emailaccount)
	{
		if (incomingemailconfiguration_emailaccount == null) {
			getMendixObject().setValue(context, MemberNames.IncomingEmailConfiguration_EmailAccount.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.IncomingEmailConfiguration_EmailAccount.toString(), incomingemailconfiguration_emailaccount.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Pk12Certificate_EmailAccount
	 */
	public final email_connector.proxies.Pk12Certificate getPk12Certificate_EmailAccount() throws com.mendix.core.CoreException
	{
		return getPk12Certificate_EmailAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of Pk12Certificate_EmailAccount
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.Pk12Certificate getPk12Certificate_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.Pk12Certificate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Pk12Certificate_EmailAccount.toString());
		if (identifier != null) {
			result = email_connector.proxies.Pk12Certificate.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Pk12Certificate_EmailAccount
	 * @param pk12certificate_emailaccount
	 */
	public final void setPk12Certificate_EmailAccount(email_connector.proxies.Pk12Certificate pk12certificate_emailaccount)
	{
		setPk12Certificate_EmailAccount(getContext(), pk12certificate_emailaccount);
	}

	/**
	 * Set value of Pk12Certificate_EmailAccount
	 * @param context
	 * @param pk12certificate_emailaccount
	 */
	public final void setPk12Certificate_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.Pk12Certificate pk12certificate_emailaccount)
	{
		if (pk12certificate_emailaccount == null) {
			getMendixObject().setValue(context, MemberNames.Pk12Certificate_EmailAccount.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Pk12Certificate_EmailAccount.toString(), pk12certificate_emailaccount.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of EmailAccount_LDAPConfiguration
	 */
	public final email_connector.proxies.LDAPConfiguration getEmailAccount_LDAPConfiguration() throws com.mendix.core.CoreException
	{
		return getEmailAccount_LDAPConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of EmailAccount_LDAPConfiguration
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.LDAPConfiguration getEmailAccount_LDAPConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.LDAPConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmailAccount_LDAPConfiguration.toString());
		if (identifier != null) {
			result = email_connector.proxies.LDAPConfiguration.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of EmailAccount_LDAPConfiguration
	 * @param emailaccount_ldapconfiguration
	 */
	public final void setEmailAccount_LDAPConfiguration(email_connector.proxies.LDAPConfiguration emailaccount_ldapconfiguration)
	{
		setEmailAccount_LDAPConfiguration(getContext(), emailaccount_ldapconfiguration);
	}

	/**
	 * Set value of EmailAccount_LDAPConfiguration
	 * @param context
	 * @param emailaccount_ldapconfiguration
	 */
	public final void setEmailAccount_LDAPConfiguration(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.LDAPConfiguration emailaccount_ldapconfiguration)
	{
		if (emailaccount_ldapconfiguration == null) {
			getMendixObject().setValue(context, MemberNames.EmailAccount_LDAPConfiguration.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.EmailAccount_LDAPConfiguration.toString(), emailaccount_ldapconfiguration.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of EmailAccount_OAuthProvider
	 */
	public final email_connector.proxies.OAuthProvider getEmailAccount_OAuthProvider() throws com.mendix.core.CoreException
	{
		return getEmailAccount_OAuthProvider(getContext());
	}

	/**
	 * @param context
	 * @return value of EmailAccount_OAuthProvider
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.OAuthProvider getEmailAccount_OAuthProvider(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.OAuthProvider result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmailAccount_OAuthProvider.toString());
		if (identifier != null) {
			result = email_connector.proxies.OAuthProvider.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of EmailAccount_OAuthProvider
	 * @param emailaccount_oauthprovider
	 */
	public final void setEmailAccount_OAuthProvider(email_connector.proxies.OAuthProvider emailaccount_oauthprovider)
	{
		setEmailAccount_OAuthProvider(getContext(), emailaccount_oauthprovider);
	}

	/**
	 * Set value of EmailAccount_OAuthProvider
	 * @param context
	 * @param emailaccount_oauthprovider
	 */
	public final void setEmailAccount_OAuthProvider(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.OAuthProvider emailaccount_oauthprovider)
	{
		if (emailaccount_oauthprovider == null) {
			getMendixObject().setValue(context, MemberNames.EmailAccount_OAuthProvider.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.EmailAccount_OAuthProvider.toString(), emailaccount_oauthprovider.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of EmailAccount_OAuthToken
	 */
	public final email_connector.proxies.OAuthToken getEmailAccount_OAuthToken() throws com.mendix.core.CoreException
	{
		return getEmailAccount_OAuthToken(getContext());
	}

	/**
	 * @param context
	 * @return value of EmailAccount_OAuthToken
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.OAuthToken getEmailAccount_OAuthToken(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.OAuthToken result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmailAccount_OAuthToken.toString());
		if (identifier != null) {
			result = email_connector.proxies.OAuthToken.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of EmailAccount_OAuthToken
	 * @param emailaccount_oauthtoken
	 */
	public final void setEmailAccount_OAuthToken(email_connector.proxies.OAuthToken emailaccount_oauthtoken)
	{
		setEmailAccount_OAuthToken(getContext(), emailaccount_oauthtoken);
	}

	/**
	 * Set value of EmailAccount_OAuthToken
	 * @param context
	 * @param emailaccount_oauthtoken
	 */
	public final void setEmailAccount_OAuthToken(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.OAuthToken emailaccount_oauthtoken)
	{
		if (emailaccount_oauthtoken == null) {
			getMendixObject().setValue(context, MemberNames.EmailAccount_OAuthToken.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.EmailAccount_OAuthToken.toString(), emailaccount_oauthtoken.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return emailAccountMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final email_connector.proxies.EmailAccount that = (email_connector.proxies.EmailAccount) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
