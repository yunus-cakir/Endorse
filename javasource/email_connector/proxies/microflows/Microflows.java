// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package email_connector.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Email_Connector module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCO_ADE_IncomingAccountMetricsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACO_ADE_IncomingAccountMetrics");
		return builder;
	}

	public static void aCO_ADE_IncomingAccountMetrics(IContext context)
	{
		aCO_ADE_IncomingAccountMetricsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCO_ADE_OutgoingAccountMetricsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACO_ADE_OutgoingAccountMetrics");
		return builder;
	}

	public static void aCO_ADE_OutgoingAccountMetrics(IContext context)
	{
		aCO_ADE_OutgoingAccountMetricsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Attachment_CreateNewBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_Attachment_CreateNew");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void aCT_Attachment_CreateNew(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		aCT_Attachment_CreateNewBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Attachment_DownloadBuilder(
		email_connector.proxies.Attachment _attachment
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_Attachment_Download");
		builder = builder.withParam("Attachment", _attachment);
		return builder;
	}

	public static void aCT_Attachment_Download(
		IContext context,
		email_connector.proxies.Attachment _attachment
	)
	{
		aCT_Attachment_DownloadBuilder(
				_attachment
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_ClientCredentialsGrant_SaveAutoConfigBuilder(
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_ClientCredentialsGrant_SaveAutoConfig");
		builder = builder.withParam("EmailProvider", _emailProvider);
		return builder;
	}

	public static void aCT_EmailAccount_ClientCredentialsGrant_SaveAutoConfig(
		IContext context,
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		aCT_EmailAccount_ClientCredentialsGrant_SaveAutoConfigBuilder(
				_emailProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_ClientCredentialsGrant_SaveManualConfigBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_ClientCredentialsGrant_SaveManualConfig");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailAccount_ClientCredentialsGrant_SaveManualConfig(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailAccount_ClientCredentialsGrant_SaveManualConfigBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_GetOrRenewTokenJavaActionBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_GetOrRenewTokenJavaAction");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static java.lang.String aCT_EmailAccount_GetOrRenewTokenJavaAction(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = aCT_EmailAccount_GetOrRenewTokenJavaActionBuilder(
				_emailAccount
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_LaunchEmailConnectorOverviewBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_LaunchEmailConnectorOverview");
		return builder;
	}

	public static void aCT_EmailAccount_LaunchEmailConnectorOverview(IContext context)
	{
		aCT_EmailAccount_LaunchEmailConnectorOverviewBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_RetrieveEmailsBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_RetrieveEmails");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailAccount_RetrieveEmails(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailAccount_RetrieveEmailsBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_SaveAutoConfigBuilder(
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveAutoConfig");
		builder = builder.withParam("EmailProvider", _emailProvider);
		return builder;
	}

	public static void aCT_EmailAccount_SaveAutoConfig(
		IContext context,
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		aCT_EmailAccount_SaveAutoConfigBuilder(
				_emailProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_SaveEmailSecurityConfigurationBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveEmailSecurityConfiguration");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailAccount_SaveEmailSecurityConfiguration(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailAccount_SaveEmailSecurityConfigurationBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailAccount_SaveManualConfigBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveManualConfig");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailAccount_SaveManualConfig(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailAccount_SaveManualConfigBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_ComposeNewEmailBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_ComposeNewEmail");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static email_connector.proxies.EmailMessage aCT_EmailMessage_ComposeNewEmail(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = aCT_EmailMessage_ComposeNewEmailBuilder(
				_emailAccount
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.EmailMessage.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_ComposeReplyBuilder(
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_ComposeReply");
		builder = builder.withParam("EmailMessage", _emailMessage);
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailMessage_ComposeReply(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailMessage_ComposeReplyBuilder(
				_emailMessage,
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_DeleteBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_Delete");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void aCT_EmailMessage_Delete(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		aCT_EmailMessage_DeleteBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_ResetQueuedStatusBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_ResetQueuedStatus");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void aCT_EmailMessage_ResetQueuedStatus(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		aCT_EmailMessage_ResetQueuedStatusBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_SendComposedEmailBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_SendComposedEmail");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void aCT_EmailMessage_SendComposedEmail(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		aCT_EmailMessage_SendComposedEmailBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_SendEmailAndClosePageBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_SendEmailAndClosePage");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void aCT_EmailMessage_SendEmailAndClosePage(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		aCT_EmailMessage_SendEmailAndClosePageBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessage_SendQueuedEmailsBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessage_SendQueuedEmails");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_EmailMessage_SendQueuedEmails(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_EmailMessage_SendQueuedEmailsBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailMessageList_ResetQueuedStatusBuilder(
		java.util.List<email_connector.proxies.EmailMessage> _emailList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailMessageList_ResetQueuedStatus");
		builder = builder.withParam("EmailList", _emailList);
		return builder;
	}

	public static void aCT_EmailMessageList_ResetQueuedStatus(
		IContext context,
		java.util.List<email_connector.proxies.EmailMessage> _emailList
	)
	{
		aCT_EmailMessageList_ResetQueuedStatusBuilder(
				_emailList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Emailtemplate_CreateTokenBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_Emailtemplate_CreateToken");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_Emailtemplate_CreateToken(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_Emailtemplate_CreateTokenBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_DuplicateAndShowPageBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_DuplicateAndShowPage");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_EmailTemplate_DuplicateAndShowPage(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_EmailTemplate_DuplicateAndShowPageBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_ExportBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_Export");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_EmailTemplate_Export(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_EmailTemplate_ExportBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_GenerateAndSetPlainTextBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_GenerateAndSetPlainText");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_EmailTemplate_GenerateAndSetPlainText(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_EmailTemplate_GenerateAndSetPlainTextBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_ImportBuilder(
		email_connector.proxies.EmailTemplateExportFile _emailTemplateExportFile
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_Import");
		builder = builder.withParam("EmailTemplateExportFile", _emailTemplateExportFile);
		return builder;
	}

	public static void aCT_EmailTemplate_Import(
		IContext context,
		email_connector.proxies.EmailTemplateExportFile _emailTemplateExportFile
	)
	{
		aCT_EmailTemplate_ImportBuilder(
				_emailTemplateExportFile
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_SaveBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_Save");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_EmailTemplate_Save(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_EmailTemplate_SaveBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EmailTemplate_ShowModelReflectionPageBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_EmailTemplate_ShowModelReflectionPage");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void aCT_EmailTemplate_ShowModelReflectionPage(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		aCT_EmailTemplate_ShowModelReflectionPageBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_IncomingEmailConfiguration_ChangeMoveToFolderBuilder(
		email_connector.proxies.Folder _folder,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_IncomingEmailConfiguration_ChangeMoveToFolder");
		builder = builder.withParam("Folder", _folder);
		builder = builder.withParam("IncomingEmailConfiguration", _incomingEmailConfiguration);
		return builder;
	}

	public static void aCT_IncomingEmailConfiguration_ChangeMoveToFolder(
		IContext context,
		email_connector.proxies.Folder _folder,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		aCT_IncomingEmailConfiguration_ChangeMoveToFolderBuilder(
				_folder,
				_incomingEmailConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_IncomingEmailConfiguration_FolderSelectBuilder(
		email_connector.proxies.Folder _folder,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_IncomingEmailConfiguration_FolderSelect");
		builder = builder.withParam("Folder", _folder);
		builder = builder.withParam("IncomingEmailConfiguration", _incomingEmailConfiguration);
		return builder;
	}

	public static void aCT_IncomingEmailConfiguration_FolderSelect(
		IContext context,
		email_connector.proxies.Folder _folder,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		aCT_IncomingEmailConfiguration_FolderSelectBuilder(
				_folder,
				_incomingEmailConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_LDAPConfiguration_ChangeBaseNameBuilder(
		email_connector.proxies.LDAPBaseDN _lDAPBaseName,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_LDAPConfiguration_ChangeBaseName");
		builder = builder.withParam("LDAPBaseName", _lDAPBaseName);
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static void aCT_LDAPConfiguration_ChangeBaseName(
		IContext context,
		email_connector.proxies.LDAPBaseDN _lDAPBaseName,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		aCT_LDAPConfiguration_ChangeBaseNameBuilder(
				_lDAPBaseName,
				_lDAPConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_OAuthProvider_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_OAuthProvider_Create");
		return builder;
	}

	public static void aCT_OAuthProvider_Create(IContext context)
	{
		aCT_OAuthProvider_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_OAuthProvider_DeleteProviderBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_OAuthProvider_DeleteProvider");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static void aCT_OAuthProvider_DeleteProvider(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		aCT_OAuthProvider_DeleteProviderBuilder(
				_oAuthProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_OAuthProvider_SaveBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_OAuthProvider_Save");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static void aCT_OAuthProvider_Save(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		aCT_OAuthProvider_SaveBuilder(
				_oAuthProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_OAuthProvider_ShowOAuthProviderPageBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_OAuthProvider_ShowOAuthProviderPage");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static void aCT_OAuthProvider_ShowOAuthProviderPage(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		aCT_OAuthProvider_ShowOAuthProviderPageBuilder(
				_oAuthProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SaveEmailAccountSettingAndClosePageBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_SaveEmailAccountSettingAndClosePage");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_SaveEmailAccountSettingAndClosePage(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_SaveEmailAccountSettingAndClosePageBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPageBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPage");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPage(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPageBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ShowAccountLoginPageBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_ShowAccountLoginPage");
		return builder;
	}

	public static void aCT_ShowAccountLoginPage(IContext context)
	{
		aCT_ShowAccountLoginPageBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ShowAccountSettingsPageBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.ACT_ShowAccountSettingsPage");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void aCT_ShowAccountSettingsPage(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		aCT_ShowAccountSettingsPageBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_EmailAccount_EncryptPasswordBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.BCO_EmailAccount_EncryptPassword");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static boolean bCO_EmailAccount_EncryptPassword(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = bCO_EmailAccount_EncryptPasswordBuilder(
				_emailAccount
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_LDAPConfiguration_EncryptPasswordBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.BCO_LDAPConfiguration_EncryptPassword");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static boolean bCO_LDAPConfiguration_EncryptPassword(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		Object result = bCO_LDAPConfiguration_EncryptPasswordBuilder(
				_lDAPConfiguration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_OAuthProvider_EncryptPasswordBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.BCO_OAuthProvider_EncryptPassword");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static boolean bCO_OAuthProvider_EncryptPassword(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		Object result = bCO_OAuthProvider_EncryptPasswordBuilder(
				_oAuthProvider
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_OAuthToken_EncryptTokensBuilder(
		email_connector.proxies.OAuthToken _oAuthToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.BCO_OAuthToken_EncryptTokens");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		return builder;
	}

	public static boolean bCO_OAuthToken_EncryptTokens(
		IContext context,
		email_connector.proxies.OAuthToken _oAuthToken
	)
	{
		Object result = bCO_OAuthToken_EncryptTokensBuilder(
				_oAuthToken
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_Pk12Certificate_EncryptPassphraseBuilder(
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.BCO_Pk12Certificate_EncryptPassphrase");
		builder = builder.withParam("Pk12Certificate", _pk12Certificate);
		return builder;
	}

	public static boolean bCO_Pk12Certificate_EncryptPassphrase(
		IContext context,
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		Object result = bCO_Pk12Certificate_EncryptPassphraseBuilder(
				_pk12Certificate
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_EmailAccount_CreateDummyAccountBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_EmailAccount_CreateDummyAccount");
		return builder;
	}

	public static email_connector.proxies.EmailAccount dS_EmailAccount_CreateDummyAccount(IContext context)
	{
		Object result = dS_EmailAccount_CreateDummyAccountBuilder().execute(context);
		return result == null ? null : email_connector.proxies.EmailAccount.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_EmailAccount_NPEBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_EmailAccount_NPE");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static email_connector.proxies.EmailAccount_NPE dS_EmailAccount_NPE(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = dS_EmailAccount_NPEBuilder(
				_emailAccount
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.EmailAccount_NPE.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_FolderListBuilder(
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_FolderList");
		builder = builder.withParam("IncomingEmailConfiguration", _incomingEmailConfiguration);
		return builder;
	}

	public static java.util.List<email_connector.proxies.Folder> dS_FolderList(
		IContext context,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		Object result = dS_FolderListBuilder(
				_incomingEmailConfiguration
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> email_connector.proxies.Folder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_GetLDAPConfigurationBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_GetLDAPConfiguration");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static email_connector.proxies.LDAPConfiguration dS_GetLDAPConfiguration(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = dS_GetLDAPConfigurationBuilder(
				_emailAccount
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.LDAPConfiguration.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_GetPKCS12CertificateBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_GetPKCS12Certificate");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static email_connector.proxies.Pk12Certificate dS_GetPKCS12Certificate(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = dS_GetPKCS12CertificateBuilder(
				_emailAccount
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.Pk12Certificate.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_LDAPBaseDNListBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_LDAPBaseDNList");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static java.util.List<email_connector.proxies.LDAPBaseDN> dS_LDAPBaseDNList(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		Object result = dS_LDAPBaseDNListBuilder(
				_lDAPConfiguration
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> email_connector.proxies.LDAPBaseDN.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_LDAPConfiguration_NPEBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_LDAPConfiguration_NPE");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static email_connector.proxies.LDAPConfiguration_NPE dS_LDAPConfiguration_NPE(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		Object result = dS_LDAPConfiguration_NPEBuilder(
				_lDAPConfiguration
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.LDAPConfiguration_NPE.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ModelReflectionCheckerBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_ModelReflectionChecker");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static email_connector.proxies.ModelReflectionChecker dS_ModelReflectionChecker(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		Object result = dS_ModelReflectionCheckerBuilder(
				_emailTemplate
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.ModelReflectionChecker.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Pk12Certificate_NPEBuilder(
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.DS_Pk12Certificate_NPE");
		builder = builder.withParam("Pk12Certificate", _pk12Certificate);
		return builder;
	}

	public static email_connector.proxies.Pk12Certificate_NPE dS_Pk12Certificate_NPE(
		IContext context,
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		Object result = dS_Pk12Certificate_NPEBuilder(
				_pk12Certificate
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.Pk12Certificate_NPE.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Background_EmailFetchMicroflowBuilder(
		java.util.List<email_connector.proxies.EmailMessage> _emailMessageList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_Background_EmailFetchMicroflow");
		builder = builder.withParam("EmailMessageList", _emailMessageList);
		return builder;
	}

	public static java.util.List<email_connector.proxies.EmailMessage> oCH_Background_EmailFetchMicroflow(
		IContext context,
		java.util.List<email_connector.proxies.EmailMessage> _emailMessageList
	)
	{
		Object result = oCH_Background_EmailFetchMicroflowBuilder(
				_emailMessageList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> email_connector.proxies.EmailMessage.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Background_EmailReceiveCompleteBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_Background_EmailReceiveComplete");
		return builder;
	}

	public static void oCH_Background_EmailReceiveComplete(IContext context)
	{
		oCH_Background_EmailReceiveCompleteBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Background_ReceiveBatchFailedBuilder(
		java.lang.String _message,
		java.lang.String _errorType,
		java.lang.String _stackTrace,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_Background_ReceiveBatchFailed");
		builder = builder.withParam("Message", _message);
		builder = builder.withParam("ErrorType", _errorType);
		builder = builder.withParam("StackTrace", _stackTrace);
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void oCH_Background_ReceiveBatchFailed(
		IContext context,
		java.lang.String _message,
		java.lang.String _errorType,
		java.lang.String _stackTrace,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		oCH_Background_ReceiveBatchFailedBuilder(
				_message,
				_errorType,
				_stackTrace,
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Background_SubscriptionStateChangedBuilder(
		java.lang.String _state,
		java.lang.String _comment
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_Background_SubscriptionStateChanged");
		builder = builder.withParam("State", _state);
		builder = builder.withParam("Comment", _comment);
		return builder;
	}

	public static void oCH_Background_SubscriptionStateChanged(
		IContext context,
		java.lang.String _state,
		java.lang.String _comment
	)
	{
		oCH_Background_SubscriptionStateChangedBuilder(
				_state,
				_comment
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_EmailMessage_ToggleRecipientsBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_EmailMessage_ToggleRecipients");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void oCH_EmailMessage_ToggleRecipients(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		oCH_EmailMessage_ToggleRecipientsBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_EmailTemplate_ToggleRecipientsBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_EmailTemplate_ToggleRecipients");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void oCH_EmailTemplate_ToggleRecipients(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		oCH_EmailTemplate_ToggleRecipientsBuilder(
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_IncomingEmailConfiguration_SelectBuilder(
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_IncomingEmailConfiguration_Select");
		builder = builder.withParam("EmailProvider", _emailProvider);
		return builder;
	}

	public static void oCH_IncomingEmailConfiguration_Select(
		IContext context,
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		oCH_IncomingEmailConfiguration_SelectBuilder(
				_emailProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_LDapConfiguration_AuthTypeBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_LDapConfiguration_AuthType");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static void oCH_LDapConfiguration_AuthType(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		oCH_LDapConfiguration_AuthTypeBuilder(
				_lDAPConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_LDAPConfiguration_DeleteConfigurationBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_LDAPConfiguration_DeleteConfiguration");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void oCH_LDAPConfiguration_DeleteConfiguration(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		oCH_LDAPConfiguration_DeleteConfigurationBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_OAuthProvider_CreateNewBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_OAuthProvider_CreateNew");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void oCH_OAuthProvider_CreateNew(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		oCH_OAuthProvider_CreateNewBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_OAuthProvider_GetOrCreateOAuthProviderBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_OAuthProvider_GetOrCreateOAuthProvider");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void oCH_OAuthProvider_GetOrCreateOAuthProvider(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		oCH_OAuthProvider_GetOrCreateOAuthProviderBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_OAuthProvider_SetCallbackURL_AuthCodeBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_OAuthProvider_SetCallbackURL_AuthCode");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static void oCH_OAuthProvider_SetCallbackURL_AuthCode(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		oCH_OAuthProvider_SetCallbackURL_AuthCodeBuilder(
				_oAuthProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_OAuthProvider_SetCallbackURL_ClientCredBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_OAuthProvider_SetCallbackURL_ClientCred");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static void oCH_OAuthProvider_SetCallbackURL_ClientCred(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		oCH_OAuthProvider_SetCallbackURL_ClientCredBuilder(
				_oAuthProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_OutgoingEmailConfiguration_SelectBuilder(
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_OutgoingEmailConfiguration_Select");
		builder = builder.withParam("EmailProvider", _emailProvider);
		return builder;
	}

	public static void oCH_OutgoingEmailConfiguration_Select(
		IContext context,
		email_connector.proxies.EmailProvider _emailProvider
	)
	{
		oCH_OutgoingEmailConfiguration_SelectBuilder(
				_emailProvider
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Pk12Certificate_DeleteCertificateBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OCH_Pk12Certificate_DeleteCertificate");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void oCH_Pk12Certificate_DeleteCertificate(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		oCH_Pk12Certificate_DeleteCertificateBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oEN_SetIncomingServerBuilder(
		email_connector.proxies.IncomingServer _incomingServer
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OEN_SetIncomingServer");
		builder = builder.withParam("IncomingServer", _incomingServer);
		return builder;
	}

	public static void oEN_SetIncomingServer(
		IContext context,
		email_connector.proxies.IncomingServer _incomingServer
	)
	{
		oEN_SetIncomingServerBuilder(
				_incomingServer
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oEN_SetOutgoingServerBuilder(
		email_connector.proxies.OutgoingServer _outgoingServer
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.OEN_SetOutgoingServer");
		builder = builder.withParam("OutgoingServer", _outgoingServer);
		return builder;
	}

	public static void oEN_SetOutgoingServer(
		IContext context,
		email_connector.proxies.OutgoingServer _outgoingServer
	)
	{
		oEN_SetOutgoingServerBuilder(
				_outgoingServer
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_AuthCodeCallbackGETBuilder(
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _customOpPath,
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.String _errorDescription
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.PRS_AuthCodeCallbackGET");
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("customOpPath", _customOpPath);
		builder = builder.withParam("code", _code);
		builder = builder.withParam("state", _state);
		builder = builder.withParam("error", _error);
		builder = builder.withParam("errorDescription", _errorDescription);
		return builder;
	}

	public static java.lang.String pRS_AuthCodeCallbackGET(
		IContext context,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _customOpPath,
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.String _errorDescription
	)
	{
		Object result = pRS_AuthCodeCallbackGETBuilder(
				_httpResponse,
				_customOpPath,
				_code,
				_state,
				_error,
				_errorDescription
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sample_ACT_CreateEmailFromTemplateAndThenSendBuilder(
		email_connector.proxies.EmailAccount _emailAccountAsDataObject,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.Sample_ACT_CreateEmailFromTemplateAndThenSend");
		builder = builder.withParam("EmailAccountAsDataObject", _emailAccountAsDataObject);
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void sample_ACT_CreateEmailFromTemplateAndThenSend(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccountAsDataObject,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		sample_ACT_CreateEmailFromTemplateAndThenSendBuilder(
				_emailAccountAsDataObject,
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sample_ACT_SendEmailWithTemplateBuilder(
		email_connector.proxies.EmailAccount _emailAccountAsDataObject,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.Sample_ACT_SendEmailWithTemplate");
		builder = builder.withParam("EmailAccountAsDataObject", _emailAccountAsDataObject);
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void sample_ACT_SendEmailWithTemplate(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccountAsDataObject,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		sample_ACT_SendEmailWithTemplateBuilder(
				_emailAccountAsDataObject,
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sample_ASU_SubscribeForEmailNotificationBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.Sample_ASU_SubscribeForEmailNotification");
		return builder;
	}

	public static boolean sample_ASU_SubscribeForEmailNotification(IContext context)
	{
		Object result = sample_ASU_SubscribeForEmailNotificationBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sE_CleanupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SE_Cleanup");
		return builder;
	}

	public static void sE_Cleanup(IContext context)
	{
		sE_CleanupBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sE_SendQueuedEmailsBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SE_SendQueuedEmails");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sE_SendQueuedEmails(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sE_SendQueuedEmailsBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Clear_List_LDAPConfiguration_NPEBuilder(
		java.util.List<email_connector.proxies.LDAPConfiguration_NPE> _lDAPConfiguration_NPEList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_Clear_List_LDAPConfiguration_NPE");
		builder = builder.withParam("LDAPConfiguration_NPEList", _lDAPConfiguration_NPEList);
		return builder;
	}

	public static void sUB_Clear_List_LDAPConfiguration_NPE(
		IContext context,
		java.util.List<email_connector.proxies.LDAPConfiguration_NPE> _lDAPConfiguration_NPEList
	)
	{
		sUB_Clear_List_LDAPConfiguration_NPEBuilder(
				_lDAPConfiguration_NPEList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_CreateLogItemBuilder(
		java.lang.String _triggeredInMF,
		email_connector.proxies.ENUM_LogType _logType,
		java.lang.String _message,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount,
		boolean _isUnread,
		system.proxies.Error _error
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_CreateLogItem");
		builder = builder.withParam("TriggeredInMF", _triggeredInMF);
		builder = builder.withParam("LogType", _logType == null ? null : _logType.name());
		builder = builder.withParam("Message", _message);
		builder = builder.withParam("EmailMessage", _emailMessage);
		builder = builder.withParam("EmailAccount", _emailAccount);
		builder = builder.withParam("isUnread", _isUnread);
		builder = builder.withParam("Error", _error);
		return builder;
	}

	public static void sUB_CreateLogItem(
		IContext context,
		java.lang.String _triggeredInMF,
		email_connector.proxies.ENUM_LogType _logType,
		java.lang.String _message,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount,
		boolean _isUnread,
		system.proxies.Error _error
	)
	{
		sUB_CreateLogItemBuilder(
				_triggeredInMF,
				_logType,
				_message,
				_emailMessage,
				_emailAccount,
				_isUnread,
				_error
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_DecryptBuilder(
		java.lang.String _encryptedString,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_Decrypt");
		builder = builder.withParam("EncryptedString", _encryptedString);
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static java.lang.String sUB_Decrypt(
		IContext context,
		java.lang.String _encryptedString,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = sUB_DecryptBuilder(
				_encryptedString,
				_emailAccount
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_DuplicateTokenListBuilder(
		java.util.List<mxmodelreflection.proxies.Token> _tokenList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_DuplicateTokenList");
		builder = builder.withParam("TokenList", _tokenList);
		return builder;
	}

	public static java.util.List<mxmodelreflection.proxies.Token> sUB_DuplicateTokenList(
		IContext context,
		java.util.List<mxmodelreflection.proxies.Token> _tokenList
	)
	{
		Object result = sUB_DuplicateTokenListBuilder(
				_tokenList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> mxmodelreflection.proxies.Token.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_CheckServerConnectionBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_CheckServerConnection");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static boolean sUB_EmailAccount_CheckServerConnection(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = sUB_EmailAccount_CheckServerConnectionBuilder(
				_emailAccount
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_CreateBuilder(
		email_connector.proxies.OutgoingEmailConfiguration _newOutgoingEmailConfiguration,
		email_connector.proxies.IncomingEmailConfiguration _newIncomingEmailConfiguration,
		email_connector.proxies.EmailProvider _emailProvider,
		email_connector.proxies.SelectedConfiguration _selectedConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_Create");
		builder = builder.withParam("NewOutgoingEmailConfiguration", _newOutgoingEmailConfiguration);
		builder = builder.withParam("NewIncomingEmailConfiguration", _newIncomingEmailConfiguration);
		builder = builder.withParam("EmailProvider", _emailProvider);
		builder = builder.withParam("SelectedConfiguration", _selectedConfiguration);
		return builder;
	}

	public static email_connector.proxies.EmailAccount sUB_EmailAccount_Create(
		IContext context,
		email_connector.proxies.OutgoingEmailConfiguration _newOutgoingEmailConfiguration,
		email_connector.proxies.IncomingEmailConfiguration _newIncomingEmailConfiguration,
		email_connector.proxies.EmailProvider _emailProvider,
		email_connector.proxies.SelectedConfiguration _selectedConfiguration
	)
	{
		Object result = sUB_EmailAccount_CreateBuilder(
				_newOutgoingEmailConfiguration,
				_newIncomingEmailConfiguration,
				_emailProvider,
				_selectedConfiguration
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.EmailAccount.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_DeleteBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_Delete");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sUB_EmailAccount_Delete(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sUB_EmailAccount_DeleteBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_NPE_ClearListBuilder(
		java.util.List<email_connector.proxies.EmailAccount_NPE> _emailAccount_NPEList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_NPE_ClearList");
		builder = builder.withParam("EmailAccount_NPEList", _emailAccount_NPEList);
		return builder;
	}

	public static void sUB_EmailAccount_NPE_ClearList(
		IContext context,
		java.util.List<email_connector.proxies.EmailAccount_NPE> _emailAccount_NPEList
	)
	{
		sUB_EmailAccount_NPE_ClearListBuilder(
				_emailAccount_NPEList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_OAuthToken_ReplaceExpiredBuilder(
		email_connector.proxies.OAuthToken _expiredOAuthToken,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthToken _newOAuthToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_OAuthToken_ReplaceExpired");
		builder = builder.withParam("ExpiredOAuthToken", _expiredOAuthToken);
		builder = builder.withParam("EmailAccount", _emailAccount);
		builder = builder.withParam("NewOAuthToken", _newOAuthToken);
		return builder;
	}

	public static void sUB_EmailAccount_OAuthToken_ReplaceExpired(
		IContext context,
		email_connector.proxies.OAuthToken _expiredOAuthToken,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthToken _newOAuthToken
	)
	{
		sUB_EmailAccount_OAuthToken_ReplaceExpiredBuilder(
				_expiredOAuthToken,
				_emailAccount,
				_newOAuthToken
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_SaveBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_Save");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sUB_EmailAccount_Save(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sUB_EmailAccount_SaveBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailAccount_SubscribeForEmailNotificationBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailAccount_SubscribeForEmailNotification");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sUB_EmailAccount_SubscribeForEmailNotification(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sUB_EmailAccount_SubscribeForEmailNotificationBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EmailMessage_SetAttachmentsBuilder(
		java.util.List<system.proxies.FileDocument> _fileDocumentList,
		email_connector.proxies.EmailMessage _email
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_EmailMessage_SetAttachments");
		builder = builder.withParam("FileDocumentList", _fileDocumentList);
		builder = builder.withParam("Email", _email);
		return builder;
	}

	public static java.util.List<email_connector.proxies.Attachment> sUB_EmailMessage_SetAttachments(
		IContext context,
		java.util.List<system.proxies.FileDocument> _fileDocumentList,
		email_connector.proxies.EmailMessage _email
	)
	{
		Object result = sUB_EmailMessage_SetAttachmentsBuilder(
				_fileDocumentList,
				_email
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> email_connector.proxies.Attachment.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GenerateOAuthNonceBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GenerateOAuthNonce");
		return builder;
	}

	public static java.lang.String sUB_GenerateOAuthNonce(IContext context)
	{
		Object result = sUB_GenerateOAuthNonceBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetEmailTemplateAttachmentsBuilder(
		java.util.List<system.proxies.FileDocument> _fileDocumentList,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetEmailTemplateAttachments");
		builder = builder.withParam("FileDocumentList", _fileDocumentList);
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static java.util.List<email_connector.proxies.Attachment> sUB_GetEmailTemplateAttachments(
		IContext context,
		java.util.List<system.proxies.FileDocument> _fileDocumentList,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		Object result = sUB_GetEmailTemplateAttachmentsBuilder(
				_fileDocumentList,
				_emailTemplate
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> email_connector.proxies.Attachment.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetFirstOAuthProviderBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetFirstOAuthProvider");
		return builder;
	}

	public static email_connector.proxies.OAuthProvider sUB_GetFirstOAuthProvider(IContext context)
	{
		Object result = sUB_GetFirstOAuthProviderBuilder().execute(context);
		return result == null ? null : email_connector.proxies.OAuthProvider.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetLDAPPasswordBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetLDAPPassword");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static java.lang.String sUB_GetLDAPPassword(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		Object result = sUB_GetLDAPPasswordBuilder(
				_lDAPConfiguration
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetNewOAuthToken_AuthCodeGrantFlowBuilder(
		email_connector.proxies.OAuthProvider _oAuthProvider,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthToken _oAuthToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetNewOAuthToken_AuthCodeGrantFlow");
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		builder = builder.withParam("EmailAccount", _emailAccount);
		builder = builder.withParam("OAuthToken", _oAuthToken);
		return builder;
	}

	public static email_connector.proxies.OAuthToken sUB_GetNewOAuthToken_AuthCodeGrantFlow(
		IContext context,
		email_connector.proxies.OAuthProvider _oAuthProvider,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthToken _oAuthToken
	)
	{
		Object result = sUB_GetNewOAuthToken_AuthCodeGrantFlowBuilder(
				_oAuthProvider,
				_emailAccount,
				_oAuthToken
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.OAuthToken.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetNewOAuthToken_ClientCredentialsGrantFlowBuilder(
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetNewOAuthToken_ClientCredentialsGrantFlow");
		builder = builder.withParam("EmailAccount", _emailAccount);
		builder = builder.withParam("OAuthProvider", _oAuthProvider);
		return builder;
	}

	public static email_connector.proxies.OAuthToken sUB_GetNewOAuthToken_ClientCredentialsGrantFlow(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.OAuthProvider _oAuthProvider
	)
	{
		Object result = sUB_GetNewOAuthToken_ClientCredentialsGrantFlowBuilder(
				_emailAccount,
				_oAuthProvider
			)
			.execute(context);
		return result == null ? null : email_connector.proxies.OAuthToken.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetOAuthURLBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetOAuthURL");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static java.lang.String sUB_GetOAuthURL(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		Object result = sUB_GetOAuthURLBuilder(
				_emailAccount
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetPk12Certificate_PassphraseBuilder(
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetPk12Certificate_Passphrase");
		builder = builder.withParam("Pk12Certificate", _pk12Certificate);
		return builder;
	}

	public static java.lang.String sUB_GetPk12Certificate_Passphrase(
		IContext context,
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		Object result = sUB_GetPk12Certificate_PassphraseBuilder(
				_pk12Certificate
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetSystemErrorBuilder(
		system.proxies.Error _systemErrObj
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_GetSystemError");
		builder = builder.withParam("SystemErrObj", _systemErrObj);
		return builder;
	}

	public static java.lang.String sUB_GetSystemError(
		IContext context,
		system.proxies.Error _systemErrObj
	)
	{
		Object result = sUB_GetSystemErrorBuilder(
				_systemErrObj
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_LDAPConfiguration_Update_No_AuthBuilder(
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_LDAPConfiguration_Update_No_Auth");
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static void sUB_LDAPConfiguration_Update_No_Auth(
		IContext context,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		sUB_LDAPConfiguration_Update_No_AuthBuilder(
				_lDAPConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_LDAPConfiguration_Update_SimpleBuilder(
		java.lang.String _encryptedPWD,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_LDAPConfiguration_Update_Simple");
		builder = builder.withParam("encryptedPWD", _encryptedPWD);
		builder = builder.withParam("LDAPConfiguration", _lDAPConfiguration);
		return builder;
	}

	public static void sUB_LDAPConfiguration_Update_Simple(
		IContext context,
		java.lang.String _encryptedPWD,
		email_connector.proxies.LDAPConfiguration _lDAPConfiguration
	)
	{
		sUB_LDAPConfiguration_Update_SimpleBuilder(
				_encryptedPWD,
				_lDAPConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_PK12Certificate_UpdateBuilder(
		java.lang.String _encryptedPWD,
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_PK12Certificate_Update");
		builder = builder.withParam("encryptedPWD", _encryptedPWD);
		builder = builder.withParam("Pk12Certificate", _pk12Certificate);
		return builder;
	}

	public static void sUB_PK12Certificate_Update(
		IContext context,
		java.lang.String _encryptedPWD,
		email_connector.proxies.Pk12Certificate _pk12Certificate
	)
	{
		sUB_PK12Certificate_UpdateBuilder(
				_encryptedPWD,
				_pk12Certificate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_RetrieveEmailsBuilder(
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_RetrieveEmails");
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sUB_RetrieveEmails(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sUB_RetrieveEmailsBuilder(
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_SendEmailBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_SendEmail");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static boolean sUB_SendEmail(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		Object result = sUB_SendEmailBuilder(
				_emailMessage
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_SendEmailFromJavaActionBuilder(
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_SendEmailFromJavaAction");
		builder = builder.withParam("EmailAccount", _emailAccount);
		builder = builder.withParam("EmailMessage", _emailMessage);
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static void sUB_SendEmailFromJavaAction(
		IContext context,
		email_connector.proxies.EmailAccount _emailAccount,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		sUB_SendEmailFromJavaActionBuilder(
				_emailAccount,
				_emailMessage,
				_emailTemplate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_SendQueuedEmailBuilder(
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.SUB_SendQueuedEmail");
		builder = builder.withParam("EmailMessage", _emailMessage);
		builder = builder.withParam("EmailAccount", _emailAccount);
		return builder;
	}

	public static void sUB_SendQueuedEmail(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage,
		email_connector.proxies.EmailAccount _emailAccount
	)
	{
		sUB_SendQueuedEmailBuilder(
				_emailMessage,
				_emailAccount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_BatchDetailsBuilder(
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.VAL_BatchDetails");
		builder = builder.withParam("IncomingEmailConfiguration", _incomingEmailConfiguration);
		return builder;
	}

	public static boolean vAL_BatchDetails(
		IContext context,
		email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration
	)
	{
		Object result = vAL_BatchDetailsBuilder(
				_incomingEmailConfiguration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_EmailRecipientsBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.VAL_EmailRecipients");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static boolean vAL_EmailRecipients(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		Object result = vAL_EmailRecipientsBuilder(
				_emailMessage
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_EmailTemplateRecipientsBuilder(
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.VAL_EmailTemplateRecipients");
		builder = builder.withParam("EmailTemplate", _emailTemplate);
		return builder;
	}

	public static boolean vAL_EmailTemplateRecipients(
		IContext context,
		email_connector.proxies.EmailTemplate _emailTemplate
	)
	{
		Object result = vAL_EmailTemplateRecipientsBuilder(
				_emailTemplate
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_LDAPConfigurationBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.VAL_LDAPConfiguration");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void vAL_LDAPConfiguration(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		vAL_LDAPConfigurationBuilder(
				_emailMessage
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_Pk12CertificateBuilder(
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Email_Connector.VAL_Pk12Certificate");
		builder = builder.withParam("EmailMessage", _emailMessage);
		return builder;
	}

	public static void vAL_Pk12Certificate(
		IContext context,
		email_connector.proxies.EmailMessage _emailMessage
	)
	{
		vAL_Pk12CertificateBuilder(
				_emailMessage
			)
			.execute(context);
	}
}
